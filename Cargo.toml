[workspace]

members = [
"analyzer",
"classifier",
"codec",
"mfcc",
"restreamer",
"tools",
"unstreamer"]

exclude = ["mongodb2sqlite"]

[workspace.dependencies]
ac-ffmpeg = "0.18.1"
anyhow = "1.0.69"
async-stream = "0.3.4"
async-trait = "0.1.66"
axum = { version = "0.6.10" }
aubio = { version = "0.2.1", features = ["pkg-config"] }
bincode = "1.3.3"
bson = "2.5.0"
bytemuck = "1.13.1"
clap = { version = "4.1.8", features = ["derive"] }
criterion = "0.4.0"
derive_builder = { version = "0.12.0", features = ["clippy"] }
flume = { version = "0.10.14", default-features = false }
futures = { version = "0.3.27" }
hls_m3u8 = "0.4.1"
humansize = { version = "2.1.3", features = ["impl_style"] }
itertools = "0.10.5"
kdam = "0.3.0"
lazy_static = "1.4.0"
lofty = "0.11.0"
log = "0.4.17"
mime = "0.3.16"
mongodb = { version = "2.4.0", features = ["bson-uuid-0_8", "bson-chrono-0_4"] }
multipart = { version = "0.18.0", default-features = false, features = ["client"] }
ndarray = { version = "0.15.6", features = ["serde"] }
ndarray-shuffle = { version = "*", git = "https://github.com/AKhranovskiy/ndarray-shuffle.git" }
ndarray-stats = "0.5.1"
numpy = "0.18.0"
os_pipe = "1.1.3"
pyo3 = { version = "0.18.1", features = ["auto-initialize"] }
rand = { version = "0.8.5", features = ["small_rng", "simd_support"] }
rayon = { version = "1.7.0" }
regex = "1.7.1"
rusqlite = { version = "0.28.0", features = ["bundled", "blob", "i128_blob", "time"] }
serde = { version = "1.0.155", features = ["derive"] }
serde-pickle = "1.1.1"
serde_json = "1.0.94"
serde_with = "2.3.1"
thiserror = "1.0.39"
time = { version = "0.3.20", features = ["formatting", "local-offset"] }
tokio = { version = "1.26.0", features = ["macros", "rt-multi-thread", "fs", "signal"] }
tower = "0.4.13"
tower-http = { version = "0.4.0", features = ["full"] }
ulid = "1.0.0"
ureq = { version = "2.6.2", features = ["json"] }
url = { version = "2.3.1", features = ["serde"] }
uuid = { version = "1.3.0", features = ["v4", "serde"] }

analyzer = { version = "*", path = "./analyzer" }
classifier = { version = "*", path = "./classifier" }
codec = { version = "*", path = "./codec" }
mfcc = { version = "*", path = "./mfcc" }
model = { version = "*", path = "./model" }
tags = { version = "*", path = "./tags" }
unstreamer = { version = "*", path = "./unstreamer" }
